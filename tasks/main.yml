---
- include: prerequisites.yml
- include: check_version.yml # creates `packer_is_up_to_date`

# Create directories, then fetch and install packer package.
- name: create packer directories
  file: path={{ item }}
        state=directory
        mode=0755
        owner=root
        group=root
  with_items:
    - /usr/local/bin/
    - /var/cache/packer

- name: fetch packer
  get_url: url={{ packer_download_url }}
           dest={{ packer_archive_path }}
  when: not packer_is_up_to_date

- name: link packer-packer as packer if it does not exist
  file: path=/usr/local/bin/packer-packer
        state=absent
  when: not packer_is_up_to_date

- name: remove old packer version
  shell: rm -f /usr/local/bin/packer*
  when: not packer_is_up_to_date

- name: unpack packer
  unarchive: src={{ packer_archive_path }}
             dest={{ packer_binary_path }}
             copy=no
  when: not packer_is_up_to_date

- name: fetch packer plugins
  get_url: url={{ item.value.url }}
           dest=/usr/local/bin/{{ item.key }}
           force={{ packer_plugins_force_install }}
  with_dict: packer_plugins

- name: make packer binaries executable
  shell: chmod 0755 /usr/local/bin/packer*

- name: check if packer needs to be symlinked
  command: /bin/ls -1 /usr/local/bin/packer
  ignore_errors: True
  register: packer_exists

- name: link packer-packer as packer if it does not exist
  file: src=/usr/local/bin/packer-packer
        dest=/usr/local/bin/packer
        owner=root
        group=root
        state=link
  when: not packer_is_up_to_date and packer_exists | failed

- name: create packer configuration file
  template: src=etc/packer.conf.j2
            dest=/etc/packer.conf
            mode=0644
            owner=root
            group=root
